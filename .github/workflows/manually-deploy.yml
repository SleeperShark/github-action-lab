name: Manually Deploy

on:
  workflow_dispatch:
    inputs:
      tag:
        type: choice
        description: image tag to deploy
        required: true
        options: 
        - task-D
        - build-test

jobs:
  # discord-notification:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Send Deploy Approval Request to Discord
  #     run: |
  #       curl \
  #       -H "Content-Type: application/json" \
  #       -X POST \
  #       -d '{"content": "Deploy Approval Request: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"}' \
  #       ${{ vars.DISCORD_WEBHOOK_URL }}

  deploy:
    runs-on: ubuntu-latest
    # needs: discord-notification
    environment: dev
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: executing remote ssh commands using ssh key
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.INSTANCE_HOST }}
        username: ${{ secrets.INSTANCE_USERNAME }}
        key: ${{ secrets.INSTANCE_SSH_KEY }}
        port: ${{ secrets.INSTANCE_PROT }}
        script: |
          cat << EOF > ~/.aws/credentials
          [default]
          aws_access_key_id = ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key = ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          EOF

          cat << EOF > ~/.aws/config
          [default]
          region = ${{ vars.AWS_REGION }}
          EOF

          COTAINER_NAME=calculator
          docker stop $COTAINER_NAME

          ECR_TOKEN=$(aws ecr get-login-password --region ${{ vars.AWS_REGION }})
          docker login -u AWS -p $ECR_TOKEN ${{ vars.ECR_URL }}
          docker run \
          -d \
          --rm \
          --pull=always \
          -p 80:8000 \
          --name $COTAINER_NAME \
          ${{ vars.ECR_URL }}:${{ github.event.inputs.tag }}
