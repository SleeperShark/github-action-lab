name: task-6-2-apply-after-merge

on:
  push:
    branches: ["main"]
    paths:
    - 'task-6-2/src/**'


permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout

jobs:
  discord-notification:
    runs-on: ubuntu-latest
    steps:
    - name: Send Deploy Approval Request to Discord
      run: |
        curl \
        -H "Content-Type: application/json" \
        -X POST \
        -d '{"content": "Apply Approval Request: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"}' \
        ${{ vars.DISCORD_WEBHOOK_URL }}

  apply:
    runs-on: ubuntu-latest
    needs: discord-notification
    environment: task-6-2
    outputs:
        instance_id: ${{ steps.terraform_output.outputs.instance_id }}
        instance_public_ip: ${{ steps.terraform_output.outputs.instance_public_ip }}
    defaults:
      run:
        working-directory: task-6-2/src
    steps:
    - uses: actions/checkout@v4

    - name: configure aws credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        role-to-assume: ${{ vars.TASK_6_2_GITHUB_ACTION_IAM_ARN }}
        aws-region: ap-northeast-1
    
    - uses: hashicorp/setup-terraform@v3

    - name: Terraform Init
      run: terraform init

    - name: Terraform Plan
      run: terraform plan -no-color

    - id: terraform_apply
      name: Terraform Apply
      run: terraform apply -auto-approve

    - id: terraform_output
      name: Terraform output
      run: |
        instance_public_ip=$(terraform output -raw instance_public_ip)
        instance_id=$(terraform output -raw instance_id)
        echo "instance_public_ip=$instance_public_ip" >> "$GITHUB_OUTPUT"
        echo "instance_id=$instance_id" >> "$GITHUB_OUTPUT"

    - name: Terraform Destroy
      if: failure()
      run: terraform destroy -auto-approve

  ssh-access:
    runs-on: ubuntu-latest
    needs: apply
    steps:
    - name: Executing Remote SSH Commands
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ needs.apply.outputs.instance_public_ip }}
        username: ${{ secrets.TASK_6_2_USERNAME }}
        key: ${{ secrets.TASK_6_2_SSH_PRIVATE_KEY }}
        port: ${{ secrets.TASK_6_2_PORT }}
        script: |
          echo "Hello World" > ~/hello.txt
